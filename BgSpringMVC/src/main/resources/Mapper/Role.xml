<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bg.dao.RoleDao">
    <insert id="addRole" parameterType="Role" keyProperty="roleid">
        <selectKey keyProperty='roleid' resultType='int' order='AFTER'  >
            select LAST_INSERT_ID();
        </selectKey>
        insert into role (rolename,createtime,updatetime,createuser) values(#{rolename},#{createtime},#{updatetime},#{createuser})
    </insert>
    <select id="findList" resultType="com.bg.model.Role" parameterType="map">
        select * from role
        <where>
            <if test="rolename!=null and rolename!=''">
                rolename =#{rolename}
            </if>
        </where>
        limit
        #{firstPage},
        #{rows}

    </select>
    <select id="findtotal" resultType="java.lang.Long" parameterType="map">
        select count(*) from role
        <where>
            <if test="rolename!=null and rolename!=''">
                rolename =#{rolename}
            </if>
        </where>
    </select>
    <delete id="deleteRole" parameterType="java.lang.String">
        DELETE from role where roleid=#{id}
    </delete>
    <select id="findById" parameterType="java.lang.String" resultType="com.bg.model.Role">
        select * from role where roleid=#{id}
    </select>
    <update id="updateRole" parameterType="Role">
        UPDATE role
        <trim prefix="set" suffixOverrides=",">
            <if test="rolename!=null and rolename!=''">rolename=#{rolename},</if>
            <if test="updatetime!=null and updatetime!=''">updatetime=#{updatetime},</if>
        </trim>
        WHERE roleid=#{roleid}
    </update>
    <select id="getAllRole" resultType="com.bg.model.Role">
        select * from role
    </select>
    <select id="addUserRole" parameterType="UserRole">
          insert into userrole(roleid,username) values(#{roleid},#{username})
    </select>
    <select id="findByUserId"  resultType="UserRole" parameterType="java.lang.String">
        select roleid,username from userrole a,userinfo b where a.username = b.name
        <if test="_parameter != null and _parameter!=''">
            and b.id =#{id}
        </if>
    </select>
    <delete id="deleteByUserName" parameterType="java.lang.String">
        DELETE from userrole where username=#{username}
    </delete>
    <insert id="addRoleResource" parameterType="map">
        insert into roleresource(roleid,resourceid) values(#{roleid},#{resourceid})
    </insert>
    <delete id="delRoleResource" parameterType="java.lang.String">
        delete from roleresource where roleid=#{roleid}
    </delete>
    <select id="findRoleByName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from role where rolename=#{rolename}
    </select>
    <select id="findByRoleNotId" parameterType="Role" resultType="java.lang.Integer">
        select count(*) from role where rolename=#{rolename} and roleid!=#{roleid}
    </select>
</mapper>